<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pilipili.mapper.VideoCommentMapper">

    <resultMap id="BaseResultMap" type="com.pilipili.Model.entity.VideoComment">
            <id property="commentId" column="commentId" jdbcType="INTEGER"/>
            <result property="pCommentId" column="pCommentId" jdbcType="INTEGER"/>
            <result property="videoId" column="videoId" jdbcType="VARCHAR"/>
            <result property="videoUserId" column="videoUserId" jdbcType="VARCHAR"/>
            <result property="content" column="content" jdbcType="VARCHAR"/>
            <result property="imgPath" column="imgPath" jdbcType="VARCHAR"/>
            <result property="userId" column="userId" jdbcType="VARCHAR"/>
            <result property="replyUserId" column="replyUserId" jdbcType="VARCHAR"/>
            <result property="topType" column="topType" jdbcType="TINYINT"/>
            <result property="postTime" column="postTime" jdbcType="TIMESTAMP"/>
            <result property="likeCount" column="likeCount" jdbcType="INTEGER"/>
            <result property="hateCount" column="hateCount" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        commentId,pCommentId,videoId,
        videoUserId,content,imgPath,
        userId,replyUserId,topType,
        postTime,likeCount,hateCount
    </sql>


    <update id="updateCountInfo">
        update VideoComment set ${field} = ${field} + ${changeCount}
        <if test="oppositeField != null">
            ,${oppositeField} = ${oppositeField} + ${opChangeCount}
        </if>
        where commentId = #{commentId}
    </update>

    <resultMap id="base_result_map_children" type="com.pilipili.Model.entity.VideoComment" extends="BaseResultMap">
        <collection property="videoCommentChildren" column="commentId" select="com.pilipili.mapper.VideoCommentMapper.selectChildrenComment"/>
    </resultMap>

    <select id="selectChildrenComment" resultMap="BaseResultMap">
        select v.*,u.nickName, u.userAvatar,u2.nickName as replyNikeName,u2.userAvatar from VideoComment v
        inner join userInfo u on v.userId = u.userId
        left join userInfo u2 on v.replyUserId = u2.userId
        where v.pCommentId = #{commentId} order by v.commentId asc
    </select>

    <select id="findListByPageWithChildren" resultMap="base_result_map_children">
        select <include refid="Base_Column_List"/>,u.nikeName,u.userAvatar
        from VideoComment v left join userInfo u on v.userId = u.userId
        where VideoComment.videoId = #{videoId}
        <if test="commentQuery.topType != null">
            and VideoComment.topType = #{commentQuery.topType}
        </if>
        <if test="commentQuery.orderBy != null">
            order by ${commentQuery.orderBy}
        </if>
    </select>

    <select id="findListByPage" resultType="com.pilipili.Model.entity.VideoComment">
        select <include refid="Base_Column_List"/>
        from VideoComment
        where VideoComment.videoId = #{videoId}
        order by ${commentQuery.orderBy}
    </select>

    <select id="getVideoCommentList" resultType="com.pilipili.Model.entity.VideoComment">
        select <include refid="Base_Column_List"/>,
               v2.videoCover,
               v2.videoName,
               u.nickName,
               u.userAvatar,
               u2.nickName as replyNickName,
               u2.userAvatar as replyUserAvatar
        from VideoComment v
        inner join VideoInfo v2 on v.videoId = v2.videoId
        left join userInfo u2 on v.replyUserId = u2.userId
        left join userInfo u on v.userId = u.userId
        <where>
            <if test="commentQuery.videoId != null">
                v.videoId = #{commentQuery.videoId}
            </if>
            <if test="commentQuery.videoNameFuzzy != null or commentQuery.videoNameFuzzy != ''">
                and v2.videoName like concat('%',#{commentQuery.videoNameFuzzy},'%')
            </if>
        </where>
        <if test="commentQuery.orderBy != null">
            order by ${commentQuery.orderBy} desc
        </if>
    </select>
</mapper>
