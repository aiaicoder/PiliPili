<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pilipili.mapper.VideoInfoMapper">

    <resultMap id="BaseResultMap" type="com.pilipili.Model.entity.VideoInfo">
            <id property="videoId" column="videoId" jdbcType="VARCHAR"/>
            <result property="videoCover" column="videoCover" jdbcType="VARCHAR"/>
            <result property="videoName" column="videoName" jdbcType="VARCHAR"/>
            <result property="userId" column="userId" jdbcType="VARCHAR"/>
            <result property="createTime" column="createTime" jdbcType="TIMESTAMP"/>
            <result property="lastUpdateTime" column="lastUpdateTime" jdbcType="TIMESTAMP"/>
            <result property="pCategoryId" column="pCategoryId" jdbcType="INTEGER"/>
            <result property="categoryId" column="categoryId" jdbcType="INTEGER"/>
            <result property="postType" column="postType" jdbcType="TINYINT"/>
            <result property="originInfo" column="originInfo" jdbcType="VARCHAR"/>
            <result property="tags" column="tags" jdbcType="VARCHAR"/>
            <result property="introduction" column="introduction" jdbcType="VARCHAR"/>
            <result property="interaction" column="interaction" jdbcType="VARCHAR"/>
            <result property="duration" column="duration" jdbcType="INTEGER"/>
            <result property="playCount" column="playCount" jdbcType="INTEGER"/>
            <result property="likeCount" column="likeCount" jdbcType="INTEGER"/>
            <result property="danMuCount" column="danMuCount" jdbcType="INTEGER"/>
            <result property="commentCount" column="commentCount" jdbcType="INTEGER"/>
            <result property="coinCount" column="coinCount" jdbcType="INTEGER"/>
            <result property="collectCount" column="collectCount" jdbcType="INTEGER"/>
            <result property="recommendType" column="recommendType" jdbcType="TINYINT"/>
            <result property="lastPlayTime" column="lastPlayTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        videoId,videoCover,videoName,
        userId,createTime,lastUpdateTime,
        pCategoryId,categoryId,postType,
        originInfo,tags,introduction,
        interaction,duration,playCount,
        likeCount,danMuCount,commentCount,
        coinCount,collectCount,recommendType,
        lastPlayTime
    </sql>
    <update id="updateCountInfo">
        update VideoInfo set ${field} = ${field} + #{changeCount}
        <if test="field == playCount">
              ,lastplayTime = now()
        </if>
        where videoId = #{videoId}
    </update>

    <select id="getRecommendVideoList" resultType="com.pilipili.Model.Vo.VideoInfoVo">
        SELECT <include refid="Base_Column_List"/> ,
            u.userAvatar,
            u.nickName
        FROM VideoInfo v
                 LEFT JOIN userInfo u ON v.userId = u.userId
        WHERE v.recommendType = #{recommendType}
        order by v.createTime DESC
    </select>

    <select id="loadVideo" resultType="com.pilipili.Model.Vo.VideoInfoVo">
        SELECT <include refid="Base_Column_List"/>
        u.userAvatar,
        u.nickName
        FROM VideoInfo v
        LEFT JOIN userInfo u ON v.userId = u.userId
        WHERE v.pCategoryId= #{videoInfoQueryRequest.pCategoryId}
          and v.categoryId= #{videoInfoQueryRequest.categoryId}
        and v.recommendType = #{recommendType}
        order by v.createTime DESC
    </select>


    <select id="load24HoursHotVideo" resultType="com.pilipili.Model.Vo.VideoInfoVo">
        SELECT
        <include refid="Base_Column_List"/>,
        u.nickName,
        u.userAvatar
        FROM VideoInfo v
        LEFT JOIN userInfo u ON v.userId = u.userId
        where v.lastPlayTime >= DATE_SUB(NOW(), INTERVAL 1 DAY)
        order by v.playCount DESC
    </select>



    <select id="getUserCountInfo" resultType="com.pilipili.Model.dto.user.CountInfoDto">
        select ifnull(sum(v.playCount), 0) as playCount,
               ifnull(sum(v.likeCount), 0) as likeCount
        from VideoInfo v
        where v.userId = #{userId}
    </select>


    <insert id="insertOrUpdate" parameterType="com.pilipili.Model.entity.VideoInfo">
        INSERT INTO VideoInfo (
            videoId, videoCover, videoName, userId, createTime, lastUpdateTime,
            pCategoryId, categoryId, postType, originInfo, tags, introduction,
            interaction, duration, playCount, likeCount, danMuCount, commentCount,
            coinCount, collectCount, recommendType, lastPlayTime
        )
        VALUES (
            #{record.videoId}, #{record.videoCover}, #{record.videoName}, 
            #{record.userId}, #{record.createTime}, #{record.lastUpdateTime},
            #{record.pCategoryId}, #{record.categoryId}, #{record.postType}, 
            #{record.originInfo}, #{record.tags}, #{record.introduction},
            #{record.interaction}, #{record.duration}, #{record.playCount}, 
            #{record.likeCount}, #{record.danMuCount}, #{record.commentCount},
            #{record.coinCount}, #{record.collectCount}, #{record.recommendType}, 
            #{record.lastPlayTime}
        )
        ON DUPLICATE KEY UPDATE
            videoCover = VALUES(videoCover),
            videoName = VALUES(videoName),
            lastUpdateTime = VALUES(lastUpdateTime),
            pCategoryId = VALUES(pCategoryId),
            categoryId = VALUES(categoryId),
            postType = VALUES(postType),
            originInfo = VALUES(originInfo),
            tags = VALUES(tags),
            introduction = VALUES(introduction),
            interaction = VALUES(interaction),
            duration = VALUES(duration),
            playCount = VALUES(playCount),
            likeCount = VALUES(likeCount),
            danMuCount = VALUES(danMuCount),
            commentCount = VALUES(commentCount),
            coinCount = VALUES(coinCount),
            collectCount = VALUES(collectCount),
            recommendType = VALUES(recommendType),
            lastPlayTime = VALUES(lastPlayTime)
    </insert>
</mapper>
